Parameters:
  VpcName:
    Type: String
    Description: "VPC Name"
  ClusterName:
    Type: String
    Description: AWS EKS Cluster Name
  CreateEC2Stack:
    Type: String
    Default: false
    Description: It determines if EC2 stack should be created
    AllowedValues: [true, false]
  CreateEKSStack:
    Type: String
    Default: false
    Description: It determines if EKS stack should be created
    AllowedValues: [true, false]

Conditions:
  IsEC2StackNeeded: !Equals
    - !Ref CreateEC2Stack
    - true
  IsEKSStackNeeded: !Equals
    - !Ref CreateEKSStack
    - true

Resources:
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VpcName: !Ref VpcName
      TimeoutInMinutes: 10
      TemplateURL: https://bucket-with-stacks.s3.eu-central-1.amazonaws.com/network-template.yml

  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn: NetworkStack
    Condition: IsEC2StackNeeded
    Properties:
      Parameters:
        PublicSubnetId: !GetAtt NetworkStack.Outputs.PublicSubnetA
        PrivateSubnetId: !GetAtt NetworkStack.Outputs.PrivateSubnetX
        DefaultSecurityGroup: !GetAtt NetworkStack.Outputs.DefaultSecurityGroup
      TimeoutInMinutes: 10
      TemplateURL: https://bucket-with-stacks.s3.eu-central-1.amazonaws.com/ec2-template.yml

  EKSStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: NetworkStack
    Condition: IsEKSStackNeeded  
    Properties:
      Parameters:
        DefaultSecurityGroup: !GetAtt NetworkStack.Outputs.DefaultSecurityGroup
        PublicSubnetA: !GetAtt NetworkStack.Outputs.PublicSubnetA
        PublicSubnetB: !GetAtt NetworkStack.Outputs.PublicSubnetB
        PublicSubnetC: !GetAtt NetworkStack.Outputs.PublicSubnetC
        PublicSubnetX: !GetAtt NetworkStack.Outputs.PublicSubnetX
        PublicSubnetY: !GetAtt NetworkStack.Outputs.PublicSubnetY
        PublicSubnetZ: !GetAtt NetworkStack.Outputs.PublicSubnetZ
      TimeoutInMinutes: 10
      TemplateURL: https://bucket-with-stacks.s3.eu-central-1.amazonaws.com/eks.yml

# Outputs:
#   ApplicationEksClusterVpc:
#     Description: VPC
#     Value: !GetAtt NetworkStack.Outputs.ClusterVPC
#     Export:
#       Name: ApplicationEksClusterVpc
#   LoadBalancerControllerRole:
#     Description: AwsLoadBalancerControllerRole
#     Value: !GetAtt EksClusterRoles.Outputs.AwsLoadBalancerControllerRole
#     Export:
#       Name: LoadBalancerControllerRole
